INSERT INTO `level_tasks` (`id`, `level_id`, `introduction`, `reference_table`, `task`, `task_accepting`, `expected_query`, `clue`, `help`) VALUES
(1, 1, 'Now, you should select a hotel to stay in Colombo.', 'Hotels', 'First, show all hotels.', 'Okay, how should I select one?', 'SELECT * FROM Hotels', 'Use SELECT * to see all rows.', '\'\n<p>The <code>SELECT</code> statement is used to fetch data from a table.</p>\n\n<p><b>Basic usage:</b></p>\n<pre><code>SELECT * FROM table_name;</code></pre>\n\n<p>This returns all rows and columns.</p>\n\n<p><b>Example:</b></p>\n<pre><code>SELECT * FROM Hotels;</code></pre>\n\n<p><b>Example Output:</b></p>\n<table class=\"table table-bordered table-sm\">\n  <thead>\n    <tr>\n      <th>id</th>\n      <th>hotel_name</th>\n      <th>location</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>Colombo Grand Hotel</td>\n      <td>Colombo</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>Kandy Hills</td>\n      <td>Kandy</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>Galle Beach Resort</td>\n      <td>Galle</td>\n    </tr>\n  </tbody>\n</table>\n\n\''),
(2, 1, 'Alex, you have many choices.', 'Hotels', 'Select the hotels from Colombo.', 'Alright, I think I should filter the hotels in Colombo.', 'select * from hotels where city=\"colombo\"', 'Pick specific columns.', '<!-- Help section: Select hotels from Colombo -->\n<section id=\"help-select-colombo\" class=\"help-section\" style=\"font-family: Arial, sans-serif; max-width:800px; margin:0 auto;\">\n  <h1>Select hotels from Colombo</h1>\n\n  <p>\n    <strong>Task:</strong> Select the hotels from Colombo.\n  </p>\n\n  <h3>Why avoid <code>*</code>?</h3>\n  <p>\n    Using <code>SELECT *</code> returns every column from the table. This can be inefficient and may expose data you don\'t need.\n    Instead, list only the columns you actually want — it makes queries faster, clearer, and safer.\n  </p>\n\n  <h3>Original expected query (uses <code>*</code>)</h3>\n  <pre><code>SELECT * FROM hotels WHERE city = \"colombo\";</code></pre>\n\n  <h3>Recommended query (explicit column list)</h3>\n  <p>\n    Assuming the table has these columns:\n    <code>id, name, address, city, stars, price_per_night, rating</code>,\n    use:\n  </p>\n  <pre><code>SELECT id, name, address, stars, price_per_night, rating\nFROM hotels\nWHERE city = \'Colombo\';</code></pre>\n\n  <p>\n    <em>Notes:</em>\n    <ul>\n      <li>Use single quotes for string literals in standard SQL: <code>\'Colombo\'</code>.</li>\n      <li>Adjust the column list to match the actual column names in your <code>hotels</code> table.</li>\n      <li>If your database is case-sensitive for string comparisons, make sure the city value matches the stored capitalization (e.g. <code>\'Colombo\'</code> vs <code>\'colombo\'</code>).</li>\n    </ul>\n  </p>\n\n ),
(3, 1, 'Hmm, I wonder what hotel you choose.', 'Hotels', 'Ok, show the details of the \"Colombo Grand Hotel\"', 'Let me select the \"Colombo Grand Hotel\"', 'SELECT * FROM `hotels` WHERE name=\"Colombo Grand Hotel\"', 'WHERE name=\"Colombo Grand Hotel\"', '<!-- Help section: Show details of Colombo Grand Hotel -->\n<section id=\"help-colombo-grand\" class=\"help-section\" style=\"font-family: Arial, sans-serif; max-width:800px; margin:0 auto;\">\n  <h1>Show the details of the \"Colombo Grand Hotel\"</h1>\n\n  <p>\n    <strong>Task:</strong> Retrieve all details for the hotel named <em>Colombo Grand Hotel</em>.\n  </p>\n\n  <h3>Why avoid <code>*</code>?</h3>\n  <p>\n    Using <code>SELECT *</code> returns every column from the table, even ones you might not need.\n    Listing only the columns you require makes your query faster, easier to read, and prevents accidental data exposure.\n  </p>\n\n  <h3>Original expected query (uses <code>*</code>)</h3>\n  <pre><code>SELECT * FROM hotels WHERE name = \"Colombo Grand Hotel\";</code></pre>\n\n  <h3>Recommended query (explicit column list)</h3>\n  <p>\n    If the <code>hotels</code> table has columns like\n    <code>id, name, address, city, stars, price_per_night, rating</code>, write:\n  </p>\n  <pre><code>SELECT id, name, address, city, stars, price_per_night, rating\nFROM hotels\nWHERE name = \'Colombo Grand Hotel\';</code></pre>\n\n  <p>\n    <em>Notes:</em>\n    <ul>\n      <li>Use single quotes for string literals: <code>\'Colombo Grand Hotel\'</code>.</li>\n      <li>Match the capitalization stored in your database for the <code>name</code> column.</li>\n      <li>Adjust the column list to exactly match your table’s structure.</li>\n    </ul>\n  </p>\n\n  <h3>Example result (example data)</h3>\n  <table style=\"width:100%; border-collapse:collapse; margin-top:8px;\">\n    <thead>\n      <tr>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">id</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">name</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">address</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">city</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">stars</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">price_per_night</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">rating</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">3</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Colombo Grand Hotel</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">123 Marine Drive</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Colombo</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">5</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">250</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">4.8</td>\n      </tr>\n    </tbody>\n  </table>\n\n</section>\n'),
(4, 2, 'Now, you should select a hotel to stay in Kandy.', 'Hotels', 'Show hotels in Kandy', 'Okay, let me show.', 'SELECT * FROM Hotels WHERE city=\"Kandy\"', 'Use WHERE condition.', '<!-- Help section: Show hotels in Kandy -->\n<section id=\"help-select-kandy\" class=\"help-section\" style=\"font-family: Arial, sans-serif; max-width:800px; margin:0 auto;\">\n  <h1>Show hotels in Kandy</h1>\n\n  <p>\n    <strong>Task:</strong> Retrieve the hotels located in the city of <em>Kandy</em>.\n  </p>\n\n  <h3>Why avoid <code>*</code>?</h3>\n  <p>\n    Using <code>SELECT *</code> returns every column from the table. This can be inefficient and may expose unnecessary data.\n    It’s better to specify only the columns you actually need, which improves clarity and performance.\n  </p>\n\n  <h3>Original expected query (uses <code>*</code>)</h3>\n  <pre><code>SELECT * FROM hotels WHERE city = \"Kandy\";</code></pre>\n\n  <h3>Recommended query (explicit column list)</h3>\n  <p>\n    If the <code>hotels</code> table contains:\n    <code>id, name, address, city, stars, price_per_night, rating</code>,\n    use:\n  </p>\n  <pre><code>SELECT id, name, address, stars, price_per_night, rating\nFROM hotels\nWHERE city = \'Kandy\';</code></pre>\n\n  <p>\n    <em>Notes:</em>\n    <ul>\n      <li>Use single quotes for string literals in standard SQL: <code>\'Kandy\'</code>.</li>\n      <li>Match the actual column names from your <code>hotels</code> table.</li>\n      <li>Ensure the string matches the stored capitalization (<code>\'Kandy\'</code> vs <code>\'kandy\'</code>).</li>\n    </ul>\n  </p>\n\n  <h3>Example result (example data)</h3>\n  <table style=\"width:100%; border-collapse:collapse; margin-top:8px;\">\n    <thead>\n      <tr>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">id</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">name</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">address</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">stars</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">price_per_night</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">rating</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">2</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Hilltop Heritage</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Lake Road, Kandy</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">3</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">120</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">4.2</td>\n      </tr>\n      <!-- More rows will appear dynamically after executing the query -->\n    </tbody>\n  </table>\n</section>\n'),
(5, 2, 'Hotels in Kandy can be pricey. Could you check which ones cost less than Rs. 5000?', 'Hotels', 'Find hotels in Kandy under Rs. 5000.', 'Got it, I need multiple conditions.', 'SELECT * FROM Hotels WHERE city=\"Kandy\" AND price < 5000', 'Filter by city and price.', '<!-- Help section: Find hotels in Kandy under Rs. 5000 -->\n<section id=\"help-kandy-under-5000\" class=\"help-section\" style=\"font-family: Arial, sans-serif; max-width:800px; margin:0 auto;\">\n  <h1>Find hotels in Kandy under Rs. 5000</h1>\n\n  <p>\n    <strong>Task:</strong> Retrieve the hotels in <em>Kandy</em> with a nightly price less than Rs.&nbsp;5000.\n  </p>\n\n  <h3>Why avoid <code>*</code>?</h3>\n  <p>\n    Using <code>SELECT *</code> pulls back every column from the table. This can make queries slower and reveal unnecessary data.\n    Specifying only the columns you actually need improves clarity and performance.\n  </p>\n\n  <h3>Original expected query (uses <code>*</code>)</h3>\n  <pre><code>SELECT * FROM hotels WHERE city = \"Kandy\" AND price &lt; 5000;</code></pre>\n\n  <h3>Recommended query (explicit column list)</h3>\n  <p>\n    If the <code>hotels</code> table has the columns\n    <code>id, name, address, city, stars, price_per_night, rating</code>,\n    write:\n  </p>\n  <pre><code>SELECT id, name, address, stars, price_per_night, rating\nFROM hotels\nWHERE city = \'Kandy\' AND price_per_night &lt; 5000;</code></pre>\n\n  <p>\n    <em>Notes:</em>\n    <ul>\n      <li>Use single quotes for string literals in standard SQL: <code>\'Kandy\'</code>.</li>\n      <li>Match the numeric column name (<code>price</code> or <code>price_per_night</code>) to your table definition.</li>\n      <li>Ensure the comparison value (5000) uses the correct currency/units as stored in the database.</li>\n    </ul>\n  </p>\n\n  <h3>Example result (example data)</h3>\n  <table style=\"width:100%; border-collapse:collapse; margin-top:8px;\">\n    <thead>\n      <tr>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">id</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">name</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">address</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">stars</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">price_per_night</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">rating</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">4</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Hill Country Stay</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Temple Road, Kandy</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">3</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">4500</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">4.1</td>\n      </tr>\n      <!-- Additional rows populate dynamically when the query runs -->\n    </tbody>\n  </table>\n</section>\n'),
(6, 2, 'I heard we have Spanish tourists visiting Kandy. Could you check which of them have names starting with G?', 'Tourists', 'Find Spanish tourists whose names start with G.', 'Okay, I’ll try LIKE with wildcards.', 'SELECT * FROM Tourists WHERE country=\"Spain\" AND name LIKE \"G%\"', 'LIKE with % is wildcard.', '<!-- Help section: Find Spanish tourists whose names start with G -->\n<section id=\"help-spanish-tourists\" class=\"help-section\" style=\"font-family: Arial, sans-serif; max-width:800px; margin:0 auto;\">\n  <h1>Find Spanish tourists whose names start with G</h1>\n\n  <p>\n    <strong>Task:</strong> Retrieve all tourists from Spain whose names begin with the letter <strong>G</strong>.\n  </p>\n\n  <h3>Why avoid <code>*</code>?</h3>\n  <p>\n    Using <code>SELECT *</code> returns every column in the table. This can slow queries, make results harder to read,\n    and may reveal unnecessary data. Listing just the needed columns keeps the query clear, efficient, and secure.\n  </p>\n\n  <h3>Original expected query (uses <code>*</code>)</h3>\n  <pre><code>SELECT * FROM Tourists WHERE country = \"Spain\" AND name LIKE \"G%\";</code></pre>\n\n  <h3>Recommended query (explicit column list)</h3>\n  <p>\n    Suppose the <code>Tourists</code> table includes:\n    <code>id, name, country, age, city, email</code>. A clearer query would be:\n  </p>\n  <pre><code>SELECT id, name, country, age, city, email\nFROM Tourists\nWHERE country = \'Spain\'\n  AND name LIKE \'G%\';</code></pre>\n\n  <p>\n    <em>Notes:</em>\n    <ul>\n      <li>Use single quotes around string literals (<code>\'Spain\'</code>).</li>\n      <li>The pattern <code>\'G%\'</code> means “names starting with G”.</li>\n      <li>Adjust the column list to your actual table columns.</li>\n      <li>If your database is case-sensitive, ensure the <code>country</code> and first-letter case match stored values.</li>\n    </ul>\n  </p>\n\n  <!-- Optional example result preview -->\n  <h3>Example result (sample data)</h3>\n  <table style=\"width:100%; border-collapse:collapse; margin-top:8px;\">\n    <thead>\n      <tr>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">id</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">name</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">country</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">age</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">city</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">email</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">21</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Gabriel Ruiz</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Spain</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">34</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Madrid</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">gabriel@example.com</td>\n      </tr>\n      <!-- Add rows dynamically when executing the real query -->\n    </tbody>\n  </table>\n\n</section>\n'),
(7, 2, 'Alex, I’d like to see tourists from Germany and Spain together. Could you find them?', 'Tourists', 'Show tourists from Germany or Spain.', 'Alright, I’ll try using OR.', 'SELECT * FROM Tourists WHERE country=\"Germany\" OR country=\"Spain\"', 'Combine with OR.', '<!-- Help section: Show tourists from Germany or Spain -->\n<section id=\"help-tourists-germany-spain\" class=\"help-section\" style=\"font-family: Arial, sans-serif; max-width:800px; margin:0 auto;\">\n  <h1>Show tourists from Germany or Spain</h1>\n\n  <p>\n    <strong>Task:</strong> Display all tourists whose country is either Germany or Spain.\n  </p>\n\n  <h3>Why avoid <code>*</code>?</h3>\n  <p>\n    Using <code>SELECT *</code> fetches every column from the table. This can be inefficient, especially if you only need a few columns, and it may reveal unnecessary or sensitive data. \n    It’s better to explicitly list only the columns you want — this improves performance, readability, and security.\n  </p>\n\n  <h3>Original expected query (uses <code>*</code>)</h3>\n  <pre><code>SELECT * FROM Tourists WHERE country = \"Germany\" OR country = \"Spain\";</code></pre>\n\n  <h3>Recommended query (explicit column list)</h3>\n  <p>\n    Assuming the <code>Tourists</code> table has columns:\n    <code>id, name, age, country, passport_no, travel_date</code>,\n    use:\n  </p>\n  <pre><code>SELECT id, name, age, country, travel_date\nFROM Tourists\nWHERE country = \'Germany\' OR country = \'Spain\';</code></pre>\n\n  <p>\n    <em>Notes:</em>\n    <ul>\n      <li>Use single quotes for string literals in standard SQL: <code>\'Germany\'</code>, <code>\'Spain\'</code>.</li>\n      <li>Adjust the column list to match your actual <code>Tourists</code> table structure.</li>\n      <li>For more complex logic, parentheses can clarify conditions, though here they are optional.</li>\n    </ul>\n  </p>\n\n  <!-- Optional example result preview (static data) -->\n  <h3>Example result (example data)</h3>\n  <table style=\"width:100%; border-collapse:collapse; margin-top:8px;\">\n    <thead>\n      <tr>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">id</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">name</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">age</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">country</th>\n        <th style=\"text-align:left; border-bottom:1px solid #ddd; padding:6px;\">travel_date</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">1</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Anna Müller</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">32</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Germany</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">2025-09-20</td>\n      </tr>\n      <tr>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">2</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Carlos García</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">28</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">Spain</td>\n        <td style=\"padding:6px; border-bottom:1px solid #f3f3f3;\">2025-09-22</td>\n      </tr>\n      <!-- More rows after executing the real query -->\n    </tbody>\n  </table>\n\n</section>\n');
